```{r, warning=FALSE}
library(readr)
library(dplyr)
yr1 <- read_csv("/Users/katrinawang/intCRT/data-raw/LONGYR1_20SAMP_OPEN.csv")
yr2 <- read_csv("/Users/katrinawang/intCRT/data-raw/LONGYR2_20SAMP_OPEN.csv")
yr3 <- read_csv("/Users/katrinawang/intCRT/data-raw/LONGYR3_20SAMP_OPEN.csv")
```

# Step 1: select who were HIV-neg start + followed over time for HIV infection
```{r}
# YR1: baseline participants, HIV-negative, incidence cohort
yr1_incident <- yr1 |>
  filter(hiv_status_current == "HIV-uninfected",
         incidence_cohort == "Yes",
         hiv_status_current != "Refused HIV testing")

id_incident <- yr1_incident$de_subj_idC

# YR2: late entrants, baseline survey & HIV-negative
yr2_baseline <- yr2 |>
  filter(survey == "BHS", hiv_status_current == "HIV-uninfected")

id_late <- yr2_baseline$de_subj_idC

# Combine eligible IDs
id_valid <- unique(c(id_incident, id_late))

# Subset YR2 and YR3 to only valid participants, excluding refusals
yr2_incident <- yr2 |>
  filter(de_subj_idC %in% id_valid,
         hiv_status_current != "Refused HIV testing")

yr3_incident <- yr3 |>
  filter(de_subj_idC %in% id_valid,
         hiv_status_current != "Refused HIV testing")
```

# Step 2: create reduced dataframes for BHS, AHS1 and AHS2
```{r}
keep_cols <- c("de_subj_idC", "community_rndmN","pair_rndmN","interview_days",
               "survey","hiv_status_current","prev_hivresult","prev_hivresult_days",
               "random_arm","gender","age_at_interview","marital_status","education","alcohol_lastsex") 

# BHS
yr1_sub <- yr1_incident[, keep_cols, drop = FALSE]
yr2_sub <- yr2_incident[, keep_cols, drop = FALSE]

bhs_df <- bind_rows(
  yr1_sub |> filter(survey == "BHS", de_subj_idC %in% id_valid),
  yr2_sub |> filter(survey == "BHS", de_subj_idC %in% id_valid)
)


# df for AHS-1
cols_AHS1 <- c("de_subj_idC", "community_rndmN", "pair_rndmN",
               "interview_days", "survey", "hiv_status_current",
               "prev_hivresult", "prev_hivresult_days")

yr1_AHS1 <- yr1_incident[, cols_AHS1, drop = FALSE]
yr2_AHS1 <- yr2_incident[, cols_AHS1, drop = FALSE]

AHS1_df <- bind_rows(
  yr1_AHS1 |> filter(survey == "AHS-1", de_subj_idC %in% id_valid),
  yr2_AHS1 |> filter(survey == "AHS-1", de_subj_idC %in% id_valid)
)

names(AHS1_df)[names(AHS1_df) %in%
  c("interview_days", "hiv_status_current", "prev_hivresult", "prev_hivresult_days")] <-
  c("fu1_interview_days", "fu1_hiv_status_current", "fu1_prev_hivresult", "fu1_prev_hivresult_days")


# df for AHS-2
cols_AHS2 <- c("de_subj_idC", "community_rndmN", "pair_rndmN",
               "interview_days", "survey", "hiv_status_current",
               "prev_hivresult", "prev_hivresult_days")

AHS2_df <- yr3_incident[, cols_AHS2, drop = FALSE] |>
  filter(survey == "AHS-2", de_subj_idC %in% id_valid)

names(AHS2_df)[names(AHS2_df) %in%
  c("interview_days", "hiv_status_current", "prev_hivresult", "prev_hivresult_days")] <-
  c("fu2_interview_days", "fu2_hiv_status_current", "fu2_prev_hivresult", "fu2_prev_hivresult_days")

```

# Step 3: Merge the dataset
```{r}
# Merge BHS, AHS-1, and AHS-2 by de_subj_idC
merged_df <- bhs_df |>
  full_join(AHS1_df, by = "de_subj_idC", suffix = c("_bhs", "_fu1")) |>
  full_join(AHS2_df, by = "de_subj_idC", suffix = c("", "_fu2")) |>
  select(
    de_subj_idC,
    hiv_status_current,
    fu1_hiv_status_current,
    fu1_interview_days,
    fu1_prev_hivresult,
    fu1_prev_hivresult_days,
    fu2_hiv_status_current,
    fu2_interview_days,
    fu2_prev_hivresult,
    fu2_prev_hivresult_days
  )
```

# Step 4: Applying the function
```{r}

```


